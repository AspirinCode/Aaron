#!/usr/bin/perl -w

use strict;
use lib $ENV{'QCHASM'};

use Aaron::AaronInit qw($W_Key $ligs_subs init_main);
use Aaron::AaronOutput qw(print_ee);
use AaronTools::G09Out;
use Data::Dumper;
use Getopt::Long;
use Pod::Usage;

my $helpMsg = "\nThis utility helps users to prepare supporting information.\n" .
              "Please run this utility under directory where you run AARON.\n" .
              "The file geometry_SI.xyz will be created containing all optimized structures.\n";

my $xyz_file = "SI_geometries.xyz";
my $help;
GetOptions(
    'help|h' => \$help,
    'output|o=s' => \$xyz_file,
) or pod2usage (
    -exitval => 1,
    -verbose => 1 );

pod2usage (
    -msg => $helpMsg,
    -exitval => 1,
    -verbose => 1) if $help;

my ($input_file) = grep { $_ =~ /\.in$/ } @ARGV;
$input_file or pod2usage (
    -msg => "A input file must be provided\n",
    -exitval => 1,
    -verbose => 0 );

#delete $xyz_file if it already exists!
system("rm -f $xyz_file");
#initiate AARON, reading needed information from command line and input files
init_main();
&grab_coords();
print "All optimized geometries written to $xyz_file\n";

sub grab_coords {
    for my $ligand (sort keys %{ $ligs_subs }) {
        my $jobs = $ligs_subs->{$ligand}->{jobs};
        my @items = ($ligand, sort keys %{ $ligs_subs->{$ligand}->{substrate} });

        for my $item (@items) {

            my @geos = grep{ $_ =~ /^$item\// } sort keys %{$jobs};

            for my $geo (@geos) {
                if ($jobs->{$geo}->{conformers}) {
                    for my $cf (sort keys %{ $jobs->{$geo}->{conformers} }) {
                        my $job = $jobs->{$geo}->{conformers}->{$cf};

                        ! @{$job->{thermo}} && do { next;};

                        my $dir = $ligand . '/' . $job->{name};
                        my $name = $job->{name};
                        $name =~ s/\//\./g;
                        my $log_file = $name . ".$job->{step}.log";
                        my $g09_out = new AaronTools::G09Out(file=>"$dir/$log_file");
                        my $geometry = $g09_out->geometry();
                        $name =~ s/\./_/g;
                        $geometry->{name}=$name;
                        $geometry->printXYZ($xyz_file, $name, 0);
                    }
                } else {	#geometries with no conformations
                    my $job = $jobs->{$geo};

                    ! @{$job->{thermo}} && do { next;};

                    my $dir = $ligand . '/' . $job->{name};
                    my $name = $job->{name};
                    $name =~ s/\//\./g;
                    my $log_file = $name . ".$job->{step}.log";
                    my $g09_out = new AaronTools::G09Out(file=>"$dir/$log_file");
                    my $geometry = $g09_out->geometry();
                    $name =~ s/\./_/g;
                    $geometry->{name}=$name;
                    $geometry->printXYZ($xyz_file, $name, 0);
                }
            }
        }
    }
}

=pod

=head1 SYNOPSIS

$QCHASM/Aaron/utility/print_SI [options] input.in

=head1 OPTIONS

=over

=item B<-o GEOMETRY_FILE_NAME>, B<--output GEOMETRY_FILE_NAME>

Write geometry data in FILE_NAME rather than geometry_SI.dat

=back

=cut







