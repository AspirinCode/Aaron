#!/usr/bin/perl -w

use strict;
use lib $ENV{'AARON'};
use lib $ENV{'PERL_LIB'};

use AaronInit qw(init_main %arg_in $ligs_subs);
use AaronOutput qw(print_ee);
use Data::Dumper;

#initiate AARON, reading needed information from command line and input files
init_main();
&analyze_result();

sub analyze_result {
   
    my $data = ''; 
    $data .= '=' x 90 . "\n";
    for my $ligand (sort keys %{ $ligs_subs }) {
        $data .= "Thermal data so far for $ligand:\n";
        $data .= '~' x 90 . "\n";
        my @items = ($ligand, sort keys %{ $ligs_subs->{$ligand}->{substrate} });
        my $jobs = $ligs_subs->{$ligand}->{jobs};

        for my $item (@items) {
            $data .= "$item: ";
            $data .= &_analyze_result($jobs, $item);
            $data .= '~' x 90 . "\n";
        }
        $data .= "\n" . '=' x 90 . "\n";
    }
    print $data;
}


sub _analyze_result {

    my ($jobs, $item) = @_;

    my @geo = grep{ $_ =~ /^$item\// } sort keys %{$jobs};

    my @stereo_geo;
    for my $geo (@{ $arg_in{selectivity} }) {
        if (my @geo_temp = grep {$_ =~ /\/$geo\//i} @geo) {
            push (@stereo_geo, [@geo_temp]);
        }
    }

    my $no_sele;
    unless (@stereo_geo) {
        @stereo_geo = ([@geo]);
        $no_sele = 1;
    }

    my $thermo = {};

    for my $n (0..$#stereo_geo) {
        my $key = $no_sele ? 'NONE' : $arg_in{selectivity}->[$n];

        $thermo->{$key} = {};
        $thermo->{$key}->{geos} = {};

        my @geos = @{ $stereo_geo[$n] };

        for my $geo (@geos) {
            if ($jobs->{$geo}->{conformers}) {
                $thermo->{$key}->{geos}->{$geo}->{conformers} = {};
                for my $cf (sort keys %{ $jobs->{$geo}->{conformers} }) {
                    my $job = $jobs->{$geo}->{conformers}->{$cf};

                    ! @{$job->{thermo}} && do { next; };

                    $thermo->{$key}->{geos}->{$geo}->{conformers}->{$cf} = [@{ $job->{thermo} }];
                    $thermo->{$key}->{found} = 1;
                }
            }else {
                $thermo->{$key}->{geos}->{$geo}->{thermo} =  [@{ $jobs->{$geo}->{thermo} }];
                if (@{ $jobs->{$geo}->{thermo} } ) {
                    $thermo->{$key}->{found} = 1;
                }
            }
        }
    }
    return print_ee($thermo, 1);
}





